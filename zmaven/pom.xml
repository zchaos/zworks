<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>zmaven</groupId>
	<artifactId>zmaven</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>zmaven</name>

	<properties>
		<jar-packaging>jar</jar-packaging>
		<java-version>1.5</java-version>
		<junit.version>4.8.2</junit.version>
		<servlet.version>2.5.0</servlet.version>
		<slf4j.version>1.6.1</slf4j.version>
		<log4j.version>1.2.15</log4j.version>
		<logback-version>1.0.2</logback-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.api</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.org.apache.commons.logging</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!--================================================================================================================== -->
			<!-- Sun相关依赖 -->
			<!--说明：由Sun公司开发的工具包，大部分是J2EE的包，它们之中有些可能会因为版本的升级而直接内置到J2SE中，使用它们时要注意版本冲突 -->
			<!--================================================================================================================== -->
			<!-- 邮件发送引用库 -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${mail.version}</version>
			</dependency>

			<!-- javaMail有关的jar包，使用javaMail时应与mail.jar一起加入到lib中去，具体负责mail的数据源和类型等 -->
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>${activation.version}</version>
			</dependency>

			<!-- 将XML与Java实体类双向解析的工具类，可以将xml文件中的定义载入为JAVA实体对象，也可以把实体很方便的写回到xml文件中,还提供了强大xjc工具，利用schema定义进行Java实体类建模 -->
			<dependency>
				<groupId>javax.xml</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.xml</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${jaxb.version}</version>
			</dependency>

			<!-- 下面这些是由spring封装，但原生包是属于sun的 -->

			<!-- 基于Http协议是Servlet服务规范类 这个jar web服务器会提供,所以scope设置成provided 由于provided包不是transitive的，所以设置成provided导致很多工程无法编译。 
				现在只能先设置成compile scope还是设置成provided，通过将javax.servlet添加到基础依赖中去解决这个问题。 -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>com.springsource.javax.servlet</artifactId>
				<version>${servlet.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- xml读写实用工具类 -->
			<dependency>
				<groupId>javax.xml.stream</groupId>
				<artifactId>com.springsource.javax.xml.stream</artifactId>
				<version>1.0.1</version>
			</dependency>

			<!-- JPA数据持久化工具类，这里带的是EclipseLink，它的前身是TOPLink -->
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>com.springsource.javax.persistence</artifactId>
				<version>${persistence.version}</version>
			</dependency>

			<!-- JAVA事务API -->
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>com.springsource.javax.transaction</artifactId>
				<version>${transaction.version}</version>
			</dependency>


			<!--================================================================================================================== -->
			<!-- OSGI相关依赖 -->
			<!--说明： 早期引用的osgi的类，以后可能会用到 -->
			<!--================================================================================================================== -->
			<!-- 启动gemini测试平台的时候需要它，如果缺少它，那么运行FreemarkerInOsgiRunTest时报下面的异常： java.lang.NoClassDefFoundError: 
				org/eclipse/core/runtime/adaptor/EclipseStarter at org.eclipse.gemini.blueprint.test.platform.EquinoxPlatform.start(EquinoxPlatform.java:71) 
				除此之外，里面有核心的org.osgi.framework.BundleActivator类。 -->
			<dependency>
				<groupId>org.sonatype.tycho</groupId>
				<artifactId>org.eclipse.osgi</artifactId>
				<version>${org.eclipse.osgi.version}</version>
			</dependency>

			<!-- org.osgi.core是org.eclipse.osgi bundle的一部分，但是感觉这个bundle比org.eclipse.osgi要通用，所以一般要依赖本bundle，而不是org.eclips.osgi。 -->
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>${osgi.version}</version>
			</dependency>

			<!-- 这个包里面都是接口，包括ServiceTracker、HttpService等核心包。 它的功能类似succezbi的api bundle，一般需要包含本bundle。 
				这个bundle有点奇怪，它的bundle-name是osgi.cmpn，与artifactId不同，很容易让人产生歧义。 -->
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>${osgi.version}</version>
			</dependency>

			<!--================================================================================================================== -->
			<!-- spring相关依赖 -->
			<!-- 说明： 主要存放spring框架相关的依赖，由sping进行osgi封装的包不包含在其中 ,仍放到各自所属的区域 -->
			<!--================================================================================================================== -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.core</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.beans</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.context</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- 20111026 这个是spring-webmvc的osgi bundle，我们用这个，不用spring-webmvc 它依赖 org.springframework.web -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.web.servlet</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- 20111025 这是一个非常奇怪的bundle，它只在http://zodiac.springsource.com/maven/bundles/仓库里面有，连http://search.maven.org上都找不到它。 
				它和spring-web bundle是一摸一样的，所以总是应该不依赖本bundle。 之前在boot-bundles.properties引用它了，换成引用：org.springframework,spring-web,3.0.5.RELEASE 
				20111026 这个包是spring-web的osgi bundle。用这个，不用spring-web。 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.web</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.context.support</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.orm</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- 不可以将org.springframework.test依赖设置为test，有部份普通类引用了此模块，如：MockRequestUtils -->
			<!-- 本bundle被gemini-blueprint-test依赖 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.test</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!--================================================================================================================== -->
			<!-- apache相关依赖 -->
			<!-- 说明： 主要存放apache的通用工具类 -->
			<!--================================================================================================================== -->
			<!-- apache的数值处理包，比如将MathUtils.round，将123.89611四舍五入为 123.90 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math</artifactId>
				<version>2.2</version>
			</dependency>

			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.8.3</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>3.6.2</version>
			</dependency>

			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-analyzers</artifactId>
				<version>3.6.2</version>
			</dependency>

			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-highlighter</artifactId>
				<version>3.6.2</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>ooxml-schemas</artifactId>
				<version>1.1</version>
				<exclusions>
					<exclusion>
						<artifactId>stax-api</artifactId>
						<groupId>stax</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- 提供API给Java程式对Microsoft Office格式档案读和写的功能 -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-scratchpad</artifactId>
				<version>3.9</version>
			</dependency>


			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>3.9</version>
				<exclusions>
					<exclusion>
						<artifactId>poi-ooxml-schemas</artifactId>
						<groupId>org.apache.poi</groupId>
					</exclusion>
					<exclusion>
						<artifactId>xml-apis</artifactId>
						<groupId>xml-apis</groupId>
					</exclusion>
					<exclusion>
						<groupId>dom4j</groupId>
						<artifactId>dom4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- 是Java实现的PDF文档协作类库,提供PDF文档的创建、处理以及文档内容提取功能,也包含了一些命令行实用工具 -->
			<!-- 升级到1.8.4版本，该版本解决了大PDF抽取文字出现OOM的问题 -->
			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>pdfbox</artifactId>
				<version>1.8.4</version>
				<exclusions>
					<!-- 排除标准日志包，因为有依赖com.springsource.slf4j.org.apache.commons.logging -->
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- pdfbox 1.8.4依赖该包 -->
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15</artifactId>
				<version>1.44</version>
			</dependency>

			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>3.1</version>
				<exclusions>
					<exclusion>
						<groupId>commons-codec</groupId>
						<artifactId>commons-codec</artifactId>
					</exclusion>
					<!-- 排除标准日志包，因为有依赖com.springsource.slf4j.org.apache.commons.logging -->
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- apache默认的commons-logging不是osgi bundler，所以其他人将它打成了bundler发布。 已知的有2个osgi版本，一个是com.springsource.slf4j.org.apache.commons.logging，另外一个是com.springsource.org.apache.commons.logging。 
				这个2个包都含有LoggerFactory和Log接口，但是实现不一样。 由于我们用slf4j作为日志类，所以用前者，即本包。 -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>com.springsource.slf4j.org.apache.commons.logging</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>com.springsource.org.apache.commons.collections</artifactId>
				<version>${collections.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.log4j</groupId>
				<artifactId>com.springsource.org.apache.log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<!-- freemarker包 -->
			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>

			<!-- felix http service -->
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.http.bundle</artifactId>
				<version>${felix.http.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.http.whiteboard</artifactId>
				<version>${felix.http.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.http.api</artifactId>
				<version>${felix.http.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.http.base</artifactId>
				<version>${felix.http.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.http.bridge</artifactId>
				<version>${felix.http.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.http.proxy</artifactId>
				<version>${felix.http.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.http.jetty</artifactId>
				<version>${felix.http.version}</version>

				<!-- 20110808 由于org.apache.felix.http.jetty已经包含org.mortbay.jetty，这里将后者排除掉。 -->
				<exclusions>
					<exclusion>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jetty</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- 这个里面也提供了BundleActivator类，这个类在org.eclipse.osgi中也提供了。 本bundle和org.eclipse.osgi的功能是一样的，提供AbstractOsgiPlatform，二者取一即可。 -->
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.main</artifactId>
				<version>${felix.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.framework</artifactId>
				<version>${felix.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.0.1</version>
				<type>jar</type>
			</dependency>

			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.6</version>
			</dependency>

			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.2.1</version>
			</dependency>


			<!--================================================================================================================== -->
			<!-- eclipse相关依赖 -->
			<!-- 说明： -->
			<!--================================================================================================================== -->
			<!-- 提供gemini测试框架，里面有核心的类：org.eclipse.gemini.blueprint.test.AbstractConfigurableBundleCreatorTests 
				本bundle依赖树是： [INFO] +- org.eclipse.gemini.blueprint:gemini-blueprint-test:jar:1.0.0.M1:compile 
				[INFO] | +- org.junit:com.springsource.junit:jar:3.8.2:compile [INFO] | +- 
				org.springframework:org.springframework.test:jar:3.0.5.RELEASE:test (version 
				managed from 3.0.3.RELEASE; scope managed from compile) [INFO] | +- org.objectweb.asm:com.springsource.org.objectweb.asm:jar:2.2.3:compile 
				[INFO] | \- org.eclipse.gemini.blueprint:gemini-blueprint-core:jar:1.0.0.M1:compile 
				[INFO] | +- org.eclipse.gemini.blueprint:gemini-blueprint-io:jar:1.0.0.M1:compile 
				[INFO] | +- org.springframework:org.springframework.aop:jar:3.0.5.RELEASE:compile 
				(version managed from 3.0.3.RELEASE) [INFO] | | \- org.aopalliance:com.springsource.org.aopalliance:jar:1.0.0:test 
				(scope managed from compile) [INFO] | +- org.springframework:org.springframework.beans:jar:3.0.5.RELEASE:compile 
				[INFO] | | \- org.springframework:org.springframework.asm:jar:3.0.5.RELEASE:compile 
				[INFO] | +- org.springframework:org.springframework.context:jar:3.0.5.RELEASE:compile 
				(version managed from 3.0.3.RELEASE) [INFO] | | \- org.springframework:org.springframework.expression:jar:3.0.5.RELEASE:compile 
				[INFO] | \- org.springframework:org.springframework.core:jar:3.0.5.RELEASE:compile 
				默认gemini test在EquinoxPlatform上启动osgi。也可以指定org.eclipse.gemini.blueprint.test.framework环境变量，改变要执行的平台。 -->
			<dependency>
				<groupId>org.eclipse.gemini.blueprint</groupId>
				<artifactId>gemini-blueprint-test</artifactId>
				<version>${gemini.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.eclipse.gemini.blueprint</groupId>
				<artifactId>gemini-blueprint-core</artifactId>
				<version>${gemini.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.gemini.blueprint</groupId>
				<artifactId>gemini-blueprint-io</artifactId>
				<version>${gemini.version}</version>
			</dependency>

			<!-- 本bundle依赖gemini-blueprint-core和gemini-blueprint-io，所以当依赖本bundle时，不需要再依赖这2个包，免得重复。 -->
			<dependency>
				<groupId>org.eclipse.gemini.blueprint</groupId>
				<artifactId>gemini-blueprint-extender</artifactId>
				<version>${gemini.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.gemini.blueprint</groupId>
				<artifactId>gemini-blueprint-mock</artifactId>
				<version>${gemini.version}</version>
			</dependency>


			<!--================================================================================================================== -->
			<!-- codehus公司相关依赖 -->
			<!-- 说明： -->
			<!--================================================================================================================== -->
			<!-- freemarker如果想返回json格式的数据给客户端就需要本bundle，它依赖jackson-core-asl bundle。 -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson-mapper-asl.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jaxen</groupId>
				<artifactId>com.springsource.org.jaxen</artifactId>
				<version>${jaxen.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>${groovy.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-launcher</artifactId>
					</exclusion>
					<exclusion>
						<groupId>antlr</groupId>
						<artifactId>antlr</artifactId>
					</exclusion>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>jline</groupId>
						<artifactId>jline</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- webservice需要此包 -->
			<dependency>
				<groupId>org.codehaus.xfire</groupId>
				<artifactId>xfire-core</artifactId>
				<version>1.2.6</version>
			</dependency>


			<!--================================================================================================================== -->
			<!-- Hibernate相关依赖 -->
			<!-- 说明： -->
			<!--================================================================================================================== -->

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>


			<!--================================================================================================================== -->
			<!-- jboss相关依赖 -->
			<!-- 说明： -->
			<!--================================================================================================================== -->
			<dependency>
				<groupId>org.jboss.javassist</groupId>
				<artifactId>com.springsource.javassist</artifactId>
				<version>${javassist.version}</version>
			</dependency>


			<!--================================================================================================================== -->
			<!-- google上的相关依赖 -->
			<!-- 说明： -->
			<!--================================================================================================================== -->
			<dependency>
				<groupId>com.google.collections</groupId>
				<artifactId>google-collections</artifactId>
				<version>1.0</version>
			</dependency>

			<!-- Kaptcha验证码 -->
			<dependency>
				<groupId>com.google.code.kaptcha</groupId>
				<artifactId>kaptcha</artifactId>
				<version>${kaptcha.version}</version>
			</dependency>


			<!--================================================================================================================== -->
			<!-- sourceforge上的第三方包 -->
			<!-- 说明： -->
			<!--================================================================================================================== -->
			<dependency>
				<groupId>net.sourceforge.cglib</groupId>
				<artifactId>com.springsource.net.sf.cglib</artifactId>
				<version>${cglib.version}</version>
			</dependency>


			<!--================================================================================================================== -->
			<!-- selenium测试框架 -->
			<!-- 说明： -->
			<!--================================================================================================================== -->
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-remote-control</artifactId>
				<version>${selenium.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-server</artifactId>
				<version>${selenium.version}</version>
			</dependency>


			<!--================================================================================================================== -->
			<!-- 其他第三方包 -->
			<!-- 说明： -->
			<!--================================================================================================================== -->
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>${c3p0.version}</version>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.1</version>
			</dependency>

			<!-- 处理userAgent的工具包 -->
			<dependency>
				<groupId>nl.bitwalker</groupId>
				<artifactId>UserAgentUtils</artifactId>
				<version>1.2.4</version>
			</dependency>

			<!-- crowd单点登陆api -->
			<dependency>
				<groupId>com.atlassian.crowd</groupId>
				<artifactId>crowd-integration-client-rest</artifactId>
				<version>${crowd.version}</version>
			</dependency>

			<!-- 一个强大的 Java 字节码生成框架，和 BCEL 或者 SERP 很类似，但是小很多，可以动态修改 java 字节码,cglib底层调用是asm -->
			<dependency>
				<groupId>asm</groupId>
				<artifactId>asm-all</artifactId>
				<version>${asm.version}</version>
			</dependency>

			<dependency>
				<groupId>com.imsl</groupId>
				<artifactId>jmsl</artifactId>
				<version>5.0.1</version>
			</dependency>

			<dependency>
				<groupId>org.dom4j</groupId>
				<artifactId>com.springsource.org.dom4j</artifactId>
				<version>1.6.1</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback-version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback-version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- 用于处理深度克隆的工具类 -->
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty</artifactId>
				<version>${jetty.version}</version>
			</dependency>

			<!-- wikitext用于根据.confluence文件生成html。我们要用.confluence写控件的文档。 -->
			<dependency>
				<groupId>org.fusesource.wikitext</groupId>
				<artifactId>wikitext-core</artifactId>
				<version>${wikitext.version}</version>
			</dependency>

			<dependency>
				<groupId>org.fusesource.wikitext</groupId>
				<artifactId>confluence-core</artifactId>
				<version>${wikitext.version}</version>
			</dependency>

			<!-- Rhino脚本引擎的依赖，提供服务器脚本的工具方法 -->
			<dependency>
				<groupId>org.mozilla</groupId>
				<artifactId>rhino</artifactId>
				<version>1.7R4</version>
			</dependency>

			<!--================================================================================================================== -->
			<!-- 日志相关相关 -->
			<!-- 说明： apache的日志包在它的专属区域中 -->
			<!--================================================================================================================== -->
			<!-- 本bundle提供访问日志的api -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>com.springsource.slf4j.api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>com.springsource.slf4j.log4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!--================================================================================================================== -->
			<!-- 分布式及缓存技术相关 -->
			<!-- 说明： -->
			<!--================================================================================================================== -->
			<dependency>
				<groupId>org.terracotta</groupId>
				<artifactId>ehcache-probe</artifactId>
				<version>1.0.2-succez</version>
			</dependency>

			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>2.5.1-succez</version>
			</dependency>

			<dependency>
				<groupId>jgroups</groupId>
				<artifactId>jgroups</artifactId>
				<version>2.8.0.GA</version>
			</dependency>
			<!--================================================================================================================== -->
			<!-- 导出格式相关 -->
			<!-- 说明： -->
			<!--================================================================================================================== -->
			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>itext-asian</artifactId>
				<version>5.2.0</version>
			</dependency>

			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>itextpdf</artifactId>
				<version>5.3.1</version>
			</dependency>

			<!-- org.htmlparser, javax.actiation, javax.mail是报表导出mht格式所需的类库 -->
			<dependency>
				<groupId>org.htmlparser</groupId>
				<artifactId>htmlparser</artifactId>
				<version>2.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>